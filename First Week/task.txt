作业：Linux命令练习一遍
1、Linux命令
	技巧类：
		善于使用 tab 键 输入前几位单词会自动补全命令或文件名
		历史命令
			直接使用上下键
			
	1、Linux命令的格式
		命令名 [选项] [参数]
	注意：
		1、命令名区分大小写
		2、使用命令时，命令名必须有
		3、选项以及参数可选，选项一般使用 - 开头
	2、具体的Linux命令
		1、who
			显示登录系统的用户信息
		2、pwd
			显示当前所在的路径
			1、目录树
				1、根 / : 代表文件的起始位置
				2、路径 : 表示一个文件或目录的字符串
				示例：pwd
					/home/teach37_pkuhpc/lustre1/project
		3、ls
			1、作用:显示指定目录的文件或子目录信息
			2、格式: ls [选项] [目录名/文件名]
			3、常用选项
				-l  列表显示文件的详细信息
				-a  显示全部文件/文件夹
			隐藏文件：目录或者文件名第一个字符是“.”
			示例：
				ls
				ls -l
				ls -a
				ls -la
				ls -la /home/teach37_pkuhpc/lustre1/project
		4、路径
			1、绝对路径
				以 / 开头的路径都是绝对路径
				一个文件通常它的绝对路径是唯一的
			2、相对路径
				不以 / 开头的路径
				相对路径的开始符号：
					.  当前为文件夹
					.. 上一级文件夹
					~  用户主目录(家目录/home/teach37_pkuhpc)
		5、cd
			1、作用
				进入到一个目录/切换工作目录
			2、用法
				1、cd 目录名
					注：目录名可以使用绝对路径，也可以使用相对路径
					示例：
						cd /home/teach37_pkuhpc/lustre1/project
						cd /
				2、cd ..  切换到当前目录的上一级目录
				3、cd .   切换到当前目录
				4、cd -   在最近访问的两个目录之间来回切换
				5、cd 直接回车
					回家(回到用户主目录)  /home/teach37_pkuhpc/lustre1
					cd ~
		6、mkdir
			1、作用
				创建一个或者多个文件夹
			2、格式
				mkdir [选项] 文件夹1 文件夹2 ... 
			3、示例
				mkdir a b c
			4、常用选项
				-p 逐层创建目录
			mkdir -p a/b/c/d
		7、touch
			1、作用
				1、如果文件不存在则直接创建
				2、如果文件存在，则用系统时间更新它的修改时间
			2、格式
				touch 文件名1 文件名2 ...
			touch first.txt
		8、rmdir
			1、作用
				删除一个或多个空的文件夹(文件夹内容必须为空)
			2、格式
				rmdir 文件夹
			rmdir /home/teach37_pkuhpc/lustre1/project
		9、rm
			1、作用
				删除文件或文件夹
			2、格式
				rm [选项] 文件/文件夹
			3、常用选项
				-r 删除全部文件或文件夹
				-i 删除前的提示(y代表yes，n代表no)
				-f 强制删除
			rm -rf /home/teach37_pkuhpc/lustre1/project
		10、clear
			1、作用
				清屏
			2、用法
				clear
				快捷键 ctrl + l
		11、通配符
			1、* 匹配任意多个任意字符
			2、？匹配一个任意字符
			3、示例：
				ls *.txt
				rm -rf *.txt
				cat test.txt
				cat ?est.txt
		12、文本编辑器 vi/vim
			1、格式：vi 文件名
			2、如何编辑
				vi编辑器的三种工作模式：
				1、正常模式(启动之后进入的模式)
					浏览文本
				2、插入模式
					在该模式下编辑文本
				3、命令行模式
			3、文本的写入步骤
				1、vi 文件名
				2、正常模式 -> 插入模式
					a ：在当前光标后面插入
					i ：在当前光标前面插入
					o ：在当前光标下一行插入
				3、编辑完成之后，按 ESC 键，由插入模式变回到正常模式
				4、按 shift + : 由正常模式 -> 命令行模式
				5、在 命令行模式下输入命令：
					:w   保存
					:wq  保存并退出
					:q   退出
					:q!  强制退出
		13、cp
			1、作用：复制文件/目录
			2、格式
				1、复制文件：cp 源文件 目标文件
				2、复制目录：cp -r 目录1 目录2
			cp test.txt test1.txt 
			cp test.txt ./
			cp -r project project1
		14、mv
			1、作用：剪切 / 重命名
			2、格式：
				1、重命名：mv 文件名1 文件名2
									 mv 目录1 目录2
				2、剪切：  mv 文件名1 路径/文件名2
									 mv 目录名1 路径/目录名2
			mv test.txt test1.txt 
			mv test.txt ./
			mv project project1
		15、cat、tac 
			1、作用：查看文本内容(在终端输出显示)
			2、格式：cat 文件名
		    cat test.txt
		    tac test.txt
		16、date
			1、作用：显示系统当前时间
			2、date +%F 显示 年-月-日
			3、date +%H:%M:%S 显示 时:分:秒
			
			[teach37_pkuhpc@login60 project1]# date
			Fri Sep  6 10:59:14 CST 2024
			[teach37_pkuhpc@login60 project1]# date +%F
			2024-09-06
			[teach37_pkuhpc@login60 project1]# date +%H:%M:%S
			10:59:28
			[teach37_pkuhpc@login60 project1]#
		17、head
			1、作用：查看文件头几行内容(默认显示10行)
			2、格式：head -n 文件名
			head test.txt
			head -n 5 test.txt 
		18、tail
			1、作用：查看文件末尾几行内容(默认显示10行)
			2、格式：tail -n 文件名
			tail test.txt
			tail -n 5 test.txt
		19、find
			1、作用：查找文件或目录
			2、格式：find 要查找的位置 -name "文件名/目录名"
			find project -name test.txt
			find project -name *.txt
		20、grep
			1、作用：文件中查找指定内容的行
			2、格式：grep "内容" 文件名
			3、示例：
				cat /etc/passwd
				grep "root" /etc/passwd
		21、wc
			1、作用：统计文件中的行数
			2、格式：wc -l 文件名
			3、示例：wc -l /etc/passwd
		22、echo
			1、作用：显示文本
			2、格式：echo "hello world"			
		23、输出重定向 >
			1、作用：把输出到终端的内容输出到指定文件
			2、格式：命令 > 文件名
			3、示例
				ls > a.txt
				cat /etc/passwd > a.txt
				head -5 /etc/passwd > a.txt
		24、输出追加重定向 >>
			1、作用：把输出到终端的内容输出追加到指定文件的末尾
			2、格式：命令 >> 文件名
			3、示例：ls >> a.txt
		25、管道符 |
			1、作用：把前面命令的输出，作为后面命令的输入
			2、格式：命令1 | 命令2
			3、注意：
				1、管道命令只处理前一个命令的正确输出，不处理错误输出
				2、管道右边命令，必须接收标准输入才行
					常用来作为接收数据管道命令有：
						sed awk cut head top less more wc sort，基本都是文本处理命令
			4、示例
				cat /etc/passwd | head -5 
		26、tar
			1、打包压缩
				1、格式：tar -zcvf 打包压缩后的文件名 目录或文件
				2、注意：压缩包名通常以 .tar.gz 结尾
			2、解压
				1、格式：tar -zxvf 压缩包名 -C 指定目录
			3、选项
				-z  调用gzip程序来进行解压缩
				-c  创建新的压缩文档
				-x  解压文件
				-v 显示详细文tar处理的文件信息
				-f 要操作的文件名
			4、示例
				tar -zcvf project.tar.gz project
					将目录/etc/sysconfig 打包成一个tar包，通过使用-z选项调用gzip程序进行压缩，压缩后的文件名为sysconfig.tar.gz，并且将压缩文件存在当前路径之下。
				tar -zxvf project.tar.gz
		27、文件/目录 权限
			1、查看权限 ls -l 文件名/目录名
				-rw-rw-r-- 1 teach37_pkuhpc teach37_pkuhpc 50 Sep  6 11:05 a.txt
				1、最左侧一列 ：代表文件类型
					1、d  目录/文件夹
					2、-  普通文件
				2、权限
					r ：有读的权限   值为4
					w ：有写的权限   值为2
					x ：有执行权限   值为1
				3、rwx分为三组
					第一组：表示所用者(所属用户)权限
					第二组：表示同组用户的权限
					第三组：其他用户具有的权限
		28、chmod
			1、作用：修改文件权限
			2、格式： chmod 选项 文件
				+r 增加读的权限  -r 去掉读的权限
				+w 增加写的权限  -w 去掉写的权限
				+x 增加执行权限  -x 去掉执行权限
					任意组合： +rw  +wx -rwx

				所属用户 --- u
				同组用户 --- g
				其他用户 --- o
				所有用户 --- a
			3、示例
				chmod a+x a.txt
				chmod u-w a.txt
				chmod 600 a.txt
				chmod 777 a.txt
				chmod 750 a.txt
